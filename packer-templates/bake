#!/usr/bin/env bash

set -euo pipefail

vm_id=
vm_name=

# Proxmox Builder

# --- Arguments Parsing --- #

available_vm() {
  [[ -n ${1:-} ]] && echo "$1"
  cat << EOF

Usage: bake-vm [options] [arguments]

Available VM:

- ubuntu-2004-server
- ubuntu-2204-server
- docker-ubuntu-2204-server
- containerd-ubuntu-2204-server
- minio-ubuntu-2204-server
- cn-ubuntu-2204-server
- custom

[Warning]: options must be passed before perfoming the actual action

EOF
  exit 1
}

print_help() {
  [[ -n ${1:-} ]] && echo "$1"
  cat << EOF

Usage: bake-vm [options] [arguments]

Available Options:

-h, --help         Print help message
-a, --all          Print available VM type

-i, --vmid         [required|number]  VM ID
-n, --name         [optional|string]  VM name
-t, --vm_type      [required|string]  Type of VM to be baked, use -a to see all the available VM type

    --isodata      [optional|string]  ISO data path (e.g "local:iso/ubuntu-22.04-live-server-amd64.iso")

Basic Usage:   ./bake -t cn-ubuntu-2204-server

Advance Usage: ./bake -i 9001 -t custom -n ubuntu-server-template

[Warning]: options must be passed before perfoming the actual action

EOF
  exit 1
}

ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd "${ROOT}"

function echoW {
  echo;
  echo -e "\033[1;37m########## $@\033[0m";
}

while [[ "$#" -gt 0 ]]; do
  case $1 in
    -a|--all)       available_vm; shift;;
    -h|--help)      print_help; shift ;;
    -i|--vmid)      vm_id="$2"; shift ;;
    -t|--type)      vm_type="$2"; shift ;;
    -n|--name)      vm_name="$2"; shift ;;
    --iso-data)     isodata="$2"; shift ;;
    *)              print_help "[Error]: Unknown option: $1"; shift ;;
  esac
  shift
done

[[ ! $(jq -c 'keys' bakery-config.json | cat) =~ .*\"${vm_type}\".* ]] && { echo "[Error]: VM template: '${vm_type}' not found in bakery-config.json"; exit 1; }
proxmox_host=$(jq -r '.proxmox_host' ./config.json)
proxmox_node_name=$(jq -r '.proxmox_node_name' ./config.json)
proxmox_api_user=$(jq -r '.proxmox_api_user' ./config.json)
http_bind_address=$(jq -r '.http_bind_address' ./config.json)
[[ ! -z "$vm_name" ]] && vm_name=$vm_name || vm_name=$vm_type
[[ ! -z "$vm_id" ]] && vm_id=$vm_id || vm_id=9000

# --- Main Operation --- #

echoW "Baking ${vm_type} template with packer\n"

packer build -force \
  -var-file vars/kevin-ubuntu-2204.json \
  -var playbook_file="playbooks/${vm_type}.yml" \
  -var template_name=$vm_name \
  -var proxmox_host="$proxmox_host" \
  -var proxmox_node_name="$proxmox_node_name" \
  -var proxmox_api_user="$proxmox_api_user" \
  -var proxmox_api_password=$PM_PASS \
  -var http_bind_address="$http_bind_address" \
  -var vm_id=$vm_id \
  proxmox-packer-template.pkr.hcl
